---
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: letsencrypt-{{ .Values.environment }}
  namespace: cert-manager # TODO: Seems like cluster issuer and cert need to be in the cert-manager namespace
spec:
  acme:
    server: {{ .Values.acmeStagingEndpoint }}
    email: {{ .Values.email }}
    privateKeySecretRef:
      name: account-key-{{ .Values.environment }}
    solvers:
      - selector:
          dnsZones:
            - {{ .Values.domain }}
        dns01:
          route53:
            # TODO: Add region to values
            region: us-west-2
            {{ if .Values.devMode }}
            # TODO: Make a note somewhere that the secret must be in the same namespace as the cert manager controller namespace
            accessKeyID: AKIAQHVWSINA7X3GL5EW
            secretAccessKeySecretRef:
              name: env-vars
              key: aws-secret-access-key
            {{ end }}
---
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ .Values.environment }}-certificate
  namespace: cert-manager
spec:
  secretName: {{ .Values.environment }}-certificate
  issuerRef:
    name: letsencrypt-{{ .Values.environment }}
    kind: ClusterIssuer
  dnsNames:
    - {{ .Values.domain }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: external-dns
  namespace: cert-manager
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: external-dns
  template:
    metadata:
      labels:
        app: external-dns
    spec:
      {{ if .Values.dnsServiceAccount }}
      serviceAccountName: {{ .Values.dnsServiceAccount }}
      {{ end }}
      containers:
        - name: external-dns
          image: k8s.gcr.io/external-dns/external-dns:v0.7.6
          imagePullPolicy: Always
          env:
            {{ if .Values.devMode }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: env-vars
                  key: aws-access-key-id
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: env-vars
                  key: aws-secret-access-key
            {{ end }}
          args:
            - --source=service
            - --source=ingress
            - --policy=upsert-only
            - --domain-filter={{ .Values.domainFilter }}
            - --provider=aws
            - --aws-zone-type=public
            - --registry=txt
            - --txt-owner-id={{ .Values.domain }}
            - --txt-prefix=txt. #https://github.com/kubernetes-sigs/external-dns/blob/master/docs/faq.md#im-using-an-elb-with-txt-registry-but-the-cname-record-clashes-with-the-txt-record-how-to-avoid-this
            - --interval=15s
            # - --log-level=debug